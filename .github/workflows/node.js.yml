      - name: Normalizar versão e preparar package.json
        id: ver
        shell: bash
        working-directory: ${{ env.EXT_DIR }}
        run: |
          set -euxo pipefail
          RAW="${{ inputs.version }}"
          # remove espaços
          RAW="${RAW//[[:space:]]/}"
          # remove prefixo v ou V
          SANITIZED="${RAW#[vV]}"

          # Se vier algo como 0.0.1-RC1, converte para 0.0.1-rc.1
          if [[ "$SANITIZED" =~ ^([0-9]+\.[0-9]+\.[0-9]+)-([A-Za-z]+)([0-9]+)$ ]]; then
            BASE="${BASH_REMATCH[1]}"
            PRE="${BASH_REMATCH[2],,}"     # lowercase
            NUM="${BASH_REMATCH[3]}"
            SANITIZED="${BASE}-${PRE}.${NUM}"
          fi

          echo "SANITIZED_VERSION=$SANITIZED" >> "$GITHUB_ENV"

          # tenta aplicar no package.json; se falhar, mostra dica
          if ! npm version "$SANITIZED" --no-git-tag-version; then
            echo "::error::Versão inválida para package.json: '$SANITIZED'. Use sem 'v/V' e com semver válido (ex.: 1.2.3, 1.2.3-rc.1)."
            exit 1
          fi

          # Derivar nome do VSIX: <publisher>.<name>-<version>.vsix (padrão do vsce)
          NAME=$(node -e "console.log(require('./package.json').name)")
          PUB=$(node -e "console.log(require('./package.json').publisher)")
          if [ -z "${PUB:-}" ] || [ "$PUB" = "undefined" ]; then
            echo "::warning::Campo 'publisher' ausente em ${PWD}/package.json. Defina-o para publicar no Marketplace."
            VSIX="teleplot-${SANITIZED}.vsix"
          else
            VSIX="${PUB}.${NAME}-${SANITIZED}.vsix"
          fi
          echo "VSIX_NAME=$VSIX" >> "$GITHUB_ENV"
